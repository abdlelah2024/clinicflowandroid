name: Android CI & GitHub Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*' # Trigger on tags like v1.0.0
  workflow_dispatch: # Allow manual trigger

env:
  BUILD_TYPE: Release

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Decode Keystore
      run: |
        echo "$ENCRYPTED_KEYSTORE_FILE" | base64 --decode > my-upload-key.keystore
      env:
        ENCRYPTED_KEYSTORE_FILE: ${{ secrets.ENCRYPTED_KEYSTORE_FILE }}

    - name: Build Release APK
      run: |
        ./gradlew assembleRelease
      env:
        KEYSTORE_PATH: my-upload-key.keystore
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

    - name: Get current date for versioning
      id: date
      run: echo "DATE=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

    - name: Get app version
      id: get_version
      run: |
        APP_VERSION=$(grep -oP 'versionName \'\K[^\']+' app/build.gradle)
        echo "APP_VERSION=$APP_VERSION" >> $GITHUB_OUTPUT

    - name: Upload APK to GitHub Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v2
      with:
        files: app/build/outputs/apk/release/app-release.apk
        name: Release ${{ github.ref_name }}
        tag_name: ${{ github.ref_name }}
        body: | 
          Automated release for version ${{ steps.get_version.outputs.APP_VERSION }} (Build ${{ steps.date.outputs.DATE }})
          
          **Changes:**
          - Update to latest features
          - Bug fixes and performance improvements
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload APK as artifact (for non-tag pushes)
      if: !startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v4
      with:
        name: app-release-apk
        path: app/build/outputs/apk/release/app-release.apk


